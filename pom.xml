<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.dfabulich</groupId>
  <artifactId>lean-sitemapgen4j</artifactId>
  <packaging>jar</packaging>
  <version>1.1.3-SNAPSHOT</version>
  <name>SitemapGen4J</name>
  <url>https://github.com/dfabulich/sitemapgen4j/</url>
  <description>SitemapGen4j is an XML sitemap generator written in Java.</description>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <maven.build.timestamp.format>yyyy.Mdd.Hmmss</maven.build.timestamp.format>
    <jacoco.outputDir>${project.build.directory}/jacoco-out/</jacoco.outputDir>
    <jacoco.reportDir>${project.build.directory}/jacoco/</jacoco.reportDir>
    <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
    <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
    <jacoco.out.merged.file>jacoco-merged.exec</jacoco.out.merged.file>

    <sonar.projectVersion>${maven.build.timestamp}</sonar.projectVersion>
    <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <mongo-java-driver.version>3.6.4</mongo-java-driver.version>
  </properties>
  <developers>
    <developer>
      <id>dfabulich</id>
      <name>Dan Fabulich</name>
      <email>dan@fabulich.com</email>
      <organization>Redfin</organization>
      <organizationUrl>http://www.redfin.com/</organizationUrl>
      <timezone>-8</timezone>
    </developer>
  </developers>
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${jacoco.agent.ut.arg}</argLine>
          <properties>
            <property>
              <name>listener</name>
              <value>org.sonar.java.jacoco.JUnitListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <argLine>${jacoco.agent.it.arg}</argLine>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <id>prepare-ut-agent</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.outputDir}/${jacoco.out.ut.file}</destFile>
              <propertyName>jacoco.agent.ut.arg</propertyName>
              <append>true</append>
            </configuration>
          </execution>
          <execution>
            <id>prepare-it-agent</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.outputDir}/${jacoco.out.it.file}</destFile>
              <propertyName>jacoco.agent.it.arg</propertyName>
              <append>true</append>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-merge</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${jacoco.outputDir}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${jacoco.outputDir}/${jacoco.out.merged.file}</destFile>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.outputDir}/${jacoco.out.merged.file}</dataFile>
              <outputDirectory>${jacoco.reportDir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>bild-central</id>
      <name>bild repository</name>
      <url>https://spring.jfrog.io/spring/libs-release-local/</url>
    </repository>
  </distributionManagement>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>